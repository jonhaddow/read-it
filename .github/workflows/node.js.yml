on: push

jobs:
  # Runs the full test suite for both client and server applications.
  test:
    runs-on: ubuntu-latest
    container: node:14

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TYPEORM_CONNECTION: postgres
      TYPEORM_HOST: postgres
      TYPEORM_DATABASE: postgres
      TYPEORM_USERNAME: postgres
      TYPEORM_PASSWORD: postgres
      TYPEORM_PORT: 5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install puppeteer libraries
        run: >
          apt-get update && apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3
          libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4
          libx11-xcb1 libxcb1 libxcomposite1
          libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6
          libnss3 lsb-release xdg-utils wget
      - name: Install
        run: npm install
      - name: Test
        run: npm test

  # Publishes a docker image of the server app, and deploys it Caprover.
  server-deploy:
    needs: test
    runs-on: ubuntu-latest
    container: node:14
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Push docker image to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: jonhaddow/read-it/alligator
          tag_with_ref: true
      - name: Deploy image
        uses: stardustventures/caprover-deploy@v2
        with:
          server: "${{ secrets.CAPROVER_URL }}"
          password: "${{ secrets.CAPROVER_PASSWORD }}"
          appname: "${{ secrets.CAPROVER_APP }}"
          image: docker.pkg.github.com/jonhaddow/read-it/alligator:main

  # Deploys to Netlify on each build. Non-production branch will be a preview only.
  client-deploy:
    needs: test
    runs-on: ubuntu-latest
    container: node:14
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install
      - name: Build
        run: npm run build:client
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          production-branch: main
          publish-dir: "./dist/client"
          deploy-message: "Deploy from GitHub Actions"
          netlify-config-path: ./netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
